git init - /*создание репозитория в папке, правой кнопкой
git config --global user.name"имя пользователя"/* создание пользователя
git config --global user.email"email пользователя"/* создание email
git config--list /* данние пользователя файл .gitconfig
##########игнорирование файлов##################
в корне создаем файл  .gitignore  все типі
в файле пишем 
logs/
в папке docs/*.txt /* игнорирует тхт в папке docs

git status /* обзор файлов которие еще не наблюдает git

cd docs /*переход в папку

git status --untracked-files=all /*не отправленние в git файли

git add . /* добавляем файли для комита для контроля git

git rm --cached <имя файла>/*удаляем файл с присмотра git

git commit -a(индексация файлов) -m(коментарий) "init" /*комит файлов

git add <имя файла> /*добавляем один файл

git add <имя файла> /*также команда обязательной индексации перед комитом

git checkout --<имя файла>/*внесенние изменения не проиндексировани откат

git log /*просмотр изменений ранее кто что делал история комитов

git help log /*справка по команде

git log --pretty=format:"%h - %an, %ar : %s"/* информация краткая

git log --since=2.weeks /* информация за 2 недели

git log -p -2 /*два комита последних всех файлов

git comit /* откривается редактор в котором пишем комит виход esc x

git config --global core.editor"путь к нотепад.exe -multiInst -notabbar -nosession -noPlugin" /* замена редактора

ветвление сначала мержим основную в нашу доп ветку, потом тестирование, после єтого мержимся в основную

git checkout -b new_f /* создание и переключение нв новую ветку

git branch /* просмотр веток

git branch -v /* просмотр веток c комитами

git branch new_f2 /* создание без переключения на новую ветку

git checkout <имя ветки> /*переключение в ветках

скачать и установить kdiff3
git config --global mergetool.kdiff3.cmd '"D:\\Program Files\\KDiff3\kdiff3' $BASE $LOCAL $REMOTE -o $MERGED'

git config global merge.tool kdiff3 /*утилита для решения конфликтов

git merge master /*мы находимся в ветке new_f и мержим к себе master сначала

git merge tool /* запуск утилиты конфликтов

GIT REMOTE ADD ORIGIN http: \* ссылка на репозиторий

git remote -v /*просмотр ссылок на репозитарии

git push -u(по умолчанию пушит в мастер) origin master/* отправка в репозиторий

##################набиваем руку#########################
git status
/*изменяем любой файл/

git add <file name>

git commit -m"github"

git push

git fetch /*загрузка изменений в папку .git но не в файлы
git pull /*загрузка измений в файлы к себе





